/*
document.addEventListener('DOMContentLoaded', () => {
  const tabLogin = document.getElementById('tab-login');
  const tabReg = document.getElementById('tab-register');
  const loginForm = document.getElementById('login-form');
  const regForm = document.getElementById('register-form');

  const loginError = document.getElementById('login-error');
  const regError = document.getElementById('reg-error');
  const regSuccess = document.getElementById('reg-success');

  // üßπ H√†m reset form login
  function resetLoginForm() {
    loginForm.reset(); // x√≥a username, password
    loginError.textContent = ''; // x√≥a l·ªói
  }

  // üßπ H√†m reset form register
  function resetRegisterForm() {
    regForm.reset(); // x√≥a name, username, password
    regError.textContent = ''; // x√≥a l·ªói
    regSuccess.textContent = ''; // x√≥a th√¥ng b√°o th√†nh c√¥ng
  }

  // üß≠ Khi nh·∫•n tab ƒêƒÉng nh·∫≠p
  tabLogin.addEventListener('click', () => {
    tabLogin.classList.add('active');
    tabReg.classList.remove('active');
    loginForm.classList.remove('hidden');
    regForm.classList.add('hidden');
    resetLoginForm(); // üßπ reset khi chuy·ªÉn sang
  });

  // üß≠ Khi nh·∫•n tab ƒêƒÉng k√Ω
  tabReg.addEventListener('click', () => {
    tabReg.classList.add('active');
    tabLogin.classList.remove('active');
    regForm.classList.remove('hidden');
    loginForm.classList.add('hidden');
    resetRegisterForm(); // üßπ reset khi chuy·ªÉn sang
  });

  // üîê X·ª≠ l√Ω ƒêƒÉng nh·∫≠p
  loginForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    loginError.textContent = '';

    const username = document.getElementById('login-username').value.trim();
    const password = document.getElementById('login-password').value;

    try {
      const res = await fetch('/api/v1/auth/login', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ username, password }),
        credentials: 'include'
      });

      const data = await res.json();

      if (!res.ok) {
        loginError.textContent = data.message || 'ƒêƒÉng nh·∫≠p th·∫•t b·∫°i. Vui l√≤ng th·ª≠ l·∫°i.';
        return;
      }

      // ‚úÖ Th√†nh c√¥ng ‚Üí chuy·ªÉn th·∫≥ng sang dashboard
      window.location = '/dashboard.html';
    } catch (err) {
      loginError.textContent = 'L·ªói k·∫øt n·ªëi m√°y ch·ªß. Vui l√≤ng th·ª≠ l·∫°i.';
    }
  });

  // üìù X·ª≠ l√Ω ƒêƒÉng k√Ω
  regForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    regError.textContent = '';
    regSuccess.textContent = '';

    const full_name = document.getElementById('reg-name').value.trim();
    const username = document.getElementById('reg-username').value.trim();
    const password = document.getElementById('reg-password').value;

    try {
      const res = await fetch('/api/v1/auth/register', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ full_name, username, password })
      });

      const data = await res.json();

      if (!res.ok) {
        regError.textContent = data.message || 'ƒêƒÉng k√Ω th·∫•t b·∫°i. Vui l√≤ng th·ª≠ l·∫°i.';
        return;
      }

      // ‚úÖ ƒêƒÉng k√Ω th√†nh c√¥ng
      regSuccess.textContent = data.message || 'ƒêƒÉng k√Ω th√†nh c√¥ng, ƒëang chuy·ªÉn v·ªÅ trang ƒëƒÉng nh·∫≠p...';

      // üßπ reset form ƒëƒÉng k√Ω
      regForm.reset();

      // ‚è≥ Sau 2 gi√¢y chuy·ªÉn sang tab ƒêƒÉng nh·∫≠p v√† reset
      setTimeout(() => {
        tabLogin.click();
        resetLoginForm();
      }, 2000);

    } catch (err) {
      regError.textContent = 'L·ªói k·∫øt n·ªëi m√°y ch·ªß. Vui l√≤ng th·ª≠ l·∫°i.';
    }
  });
});
*/
document.addEventListener('DOMContentLoaded', () => {
  const tabLogin = document.getElementById('tab-login');
  const tabReg = document.getElementById('tab-register');
  const loginForm = document.getElementById('login-form');
  const regForm = document.getElementById('register-form');

  const loginError = document.getElementById('login-error');
  const regError = document.getElementById('reg-error');
  const regSuccess = document.getElementById('reg-success');

  // üßπ Reset form login
  function resetLoginForm() {
    loginForm.reset();
    loginError.textContent = '';
  }

  // üßπ Reset form register
  function resetRegisterForm() {
    regForm.reset();
    regError.textContent = '';
    regSuccess.textContent = '';
  }

  // üß≠ Tab ƒêƒÉng nh·∫≠p
  tabLogin.addEventListener('click', () => {
    tabLogin.classList.add('active');
    tabReg.classList.remove('active');
    loginForm.classList.remove('hidden');
    regForm.classList.add('hidden');
    resetLoginForm();
  });

  // üß≠ Tab ƒêƒÉng k√Ω
  tabReg.addEventListener('click', () => {
    tabReg.classList.add('active');
    tabLogin.classList.remove('active');
    regForm.classList.remove('hidden');
    loginForm.classList.add('hidden');
    resetRegisterForm();
  });

  // üîê X·ª≠ l√Ω ƒêƒÉng nh·∫≠p
  loginForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    loginError.textContent = '';

    const username = document.getElementById('login-username').value.trim();
    const password = document.getElementById('login-password').value;

    try {
      const res = await fetch('/api/v1/auth/login', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ username, password }),
        credentials: 'include'
      });

      const data = await res.json();

      if (!res.ok) {
        loginError.textContent = data.message || 'ƒêƒÉng nh·∫≠p th·∫•t b·∫°i. Vui l√≤ng th·ª≠ l·∫°i.';
        return;
      }



      // ‚úÖ Chuy·ªÉn sang dashboard
      window.location.href = 'dashboard.html';
    } catch (err) {
      loginError.textContent = 'L·ªói k·∫øt n·ªëi m√°y ch·ªß. Vui l√≤ng th·ª≠ l·∫°i.';
    }
  });

  // üìù X·ª≠ l√Ω ƒêƒÉng k√Ω
  regForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    regError.textContent = '';
    regSuccess.textContent = '';

    const full_name = document.getElementById('reg-name').value.trim();
    const username = document.getElementById('reg-username').value.trim();
    const password = document.getElementById('reg-password').value;

    try {
      const res = await fetch('/api/v1/auth/register', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ full_name, username, password })
      });

      const data = await res.json();

      if (!res.ok) {
        regError.textContent = data.message || 'ƒêƒÉng k√Ω th·∫•t b·∫°i. Vui l√≤ng th·ª≠ l·∫°i.';
        return;
      }

      regSuccess.textContent = data.message || 'ƒêƒÉng k√Ω th√†nh c√¥ng! ƒêang chuy·ªÉn v·ªÅ trang ƒëƒÉng nh·∫≠p...';
      regForm.reset();

      setTimeout(() => {
        tabLogin.click();
        resetLoginForm();
      }, 2000);
    } catch (err) {
      regError.textContent = 'L·ªói k·∫øt n·ªëi m√°y ch·ªß. Vui l√≤ng th·ª≠ l·∫°i.';
    }
  });
});
