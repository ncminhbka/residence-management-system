document.addEventListener("DOMContentLoaded", async () => {
  // ‚úÖ Ch·ªù layout v√† user load xong ho√†n to√†n
  await initLayoutAndAuth();

  // === B·∫ÆT ƒê·∫¶U KI·ªÇM TRA PH√ÇN QUY·ªÄN ===
  const allowedRoles = ["TO_TRUONG", "TO_PHO"];
  const userRole = window.__currentUserRole;

  if (!allowedRoles.includes(userRole)) {
    // N·∫øu kh√¥ng ƒë·ªß quy·ªÅn, hi·ªÉn th·ªã th√¥ng b√°o l·ªói v√† d·ª´ng l·∫°i
    const contentSection = document.querySelector(".content");
    if (contentSection) {
        contentSection.innerHTML = `
            <h2 style="color: red;">‚ùå TRUY C·∫¨P B·ªä T·ª™ CH·ªêI</h2>
            <p>T√†i kho·∫£n c·ªßa b·∫°n (${userRole}) kh√¥ng c√≥ quy·ªÅn qu·∫£n l√Ω t√†i kho·∫£n.</p>
        `;
    }
    console.error("‚ùå Ng∆∞·ªùi d√πng kh√¥ng ƒë·ªß quy·ªÅn truy c·∫≠p trang qu·∫£n l√Ω t√†i kho·∫£n.");
    return; // D·ª™NG VI·ªÜC TH·ª∞C THI CODE TI·∫æP THEO
  }
  // === K·∫æT TH√öC KI·ªÇM TRA PH√ÇN QUY·ªÄN ===

  // ‚úÖ ƒê·∫£m b·∫£o layout render xong h·∫≥n (ƒë·ªÅ ph√≤ng DOM ch∆∞a s·∫µn)
  let tableBody = null;
  for (let i = 0; i < 10; i++) {
    tableBody = document.querySelector("#accountsTable tbody");
    if (tableBody) break;
    await new Promise(r => setTimeout(r, 100));
  }

  if (!tableBody) {
    console.error("‚ùå Kh√¥ng t√¨m th·∫•y b·∫£ng #accountsTable trong DOM!");
    return;
  }

  const form = document.getElementById("createAccountForm");
  const msg = document.getElementById("accountMessage");

  // ======= H√ÄM: Load danh s√°ch t√†i kho·∫£n =======
  async function loadAccounts() {
    console.log("üîç B·∫Øt ƒë·∫ßu loadAccounts()");
    tableBody.innerHTML = "<tr><td colspan='6'>ƒêang t·∫£i...</td></tr>";

    try {
      const res = await fetch("/api/v1/accounts", { credentials: "include" });
      if (!res.ok) throw new Error("Kh√¥ng th·ªÉ t·∫£i danh s√°ch t√†i kho·∫£n");

      const result = await res.json();
      console.log("üëâ D·ªØ li·ªáu t·ª´ API:", result);
      const accounts = result.data || [];

      if (accounts.length === 0) {
        tableBody.innerHTML = "<tr><td colspan='6'>Ch∆∞a c√≥ t√†i kho·∫£n n√†o</td></tr>";
        return;
      }

      tableBody.innerHTML = "";
      accounts.forEach(acc => {
        const tr = document.createElement("tr");
        tr.innerHTML = `
          <td>${acc.MATAIKHOAN}</td>
          <td>${acc.HOTEN}</td>
          <td>${acc.TENDANGNHAP}</td>
          <td>${acc.CHUCVU}</td>
          <td>üü¢ K√≠ch ho·∫°t</td>
          <td>---</td>
        `;
        tableBody.appendChild(tr);
      });
    } catch (err) {
      console.error("L·ªói khi t·∫£i d·ªØ li·ªáu:", err);
      tableBody.innerHTML = "<tr><td colspan='6'>L·ªói khi t·∫£i d·ªØ li·ªáu.</td></tr>";
    }
  }

  // ‚úÖ G·ªçi khi DOM s·∫µn s√†ng
  await loadAccounts();

  // ======= H√ÄM: G·ª≠i form t·∫°o t√†i kho·∫£n m·ªõi =======
  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    msg.textContent = "";

    const hoten = document.getElementById("hoten").value.trim();
    const tendangnhap = document.getElementById("tendangnhap").value.trim();
    const matkhau = document.getElementById("matkhau").value.trim();
    const chucvu = document.getElementById("chucvu").value;

    // Ki·ªÉm tra ƒë·∫ßu v√†o c∆° b·∫£n
    if (!hoten || !tendangnhap || !matkhau || !chucvu) {
      msg.style.color = "red";
      msg.textContent = "‚ö†Ô∏è Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin!";
      return;
    }

    try {
      const res = await fetch("/api/v1/accounts", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        credentials: "include",
        body: JSON.stringify({
          hoten,
          tendangnhap,
          matkhau,
          chucvu
        }),
      });



      const data = await res.json();
      if (!res.ok) throw new Error(data.message || "T·∫°o t√†i kho·∫£n th·∫•t b·∫°i");

      msg.style.color = "green";
      msg.textContent = "‚úÖ T·∫°o t√†i kho·∫£n th√†nh c√¥ng!";
      form.reset();

      await loadAccounts(); // C·∫≠p nh·∫≠t b·∫£ng ngay
    } catch (err) {
      console.error("‚ùå L·ªói khi t·∫°o t√†i kho·∫£n:", err);
      msg.style.color = "red";
      msg.textContent = "‚ùå " + err.message;
    }
  });
});
