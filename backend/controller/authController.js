const pool = require('../db');
const bcrypt = require('bcrypt');
const userModel = require('../models/userModel');
const { generateToken } = require('../utils/jwt');


const JWT_EXPIRY = '1h';


login = async (req, res) => {
  const { username, password } = req.body;

  // Ki·ªÉm tra d·ªØ li·ªáu ƒë·∫ßu v√†o
  if (!username || !password)
    return res.status(400).json({ message: 'Vui l√≤ng nh·∫≠p username v√† m·∫≠t kh·∫©u.' });

  try {
    const user = await userModel.findByUsername(username);
    if (!user)
      return res.status(400).json({ message: 'Username ho·∫∑c m·∫≠t kh·∫©u kh√¥ng ch√≠nh x√°c.' });

    // üîí Ki·ªÉm tra tr·∫°ng th√°i t√†i kho·∫£n
    if (user.TRANGTHAI === 0 || user.TRANGTHAI === false)
      return res.status(403).json({ message: 'T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ b·ªã v√¥ hi·ªáu h√≥a. Vui l√≤ng li√™n h·ªá qu·∫£n tr·ªã vi√™n.' });

    // ‚úÖ Ki·ªÉm tra m·∫≠t kh·∫©u (n·∫øu c√≥ m√£ h√≥a b·∫±ng bcrypt)
    const isMatch = await bcrypt.compare(password, user.MATKHAU);
    if (!isMatch)
      return res.status(400).json({ message: 'Username ho·∫∑c m·∫≠t kh·∫©u kh√¥ng ch√≠nh x√°c.' });

    // ‚úÖ T·∫°o JWT token AE CH√ö √ù C√ÅI N√ÄY QUAN TR·ªåNG
    const token = generateToken({
      id: user.MATAIKHOAN,
      username: user.TENDANGNHAP,
      role: user.CHUCVU
    }, JWT_EXPIRY);

    // ‚úÖ L∆∞u token v√†o cookie
    res.cookie('token', token, {
      httpOnly: true,
      sameSite: 'lax',
      maxAge: 1000 * 60 * 60 // 1 gi·ªù
    });

    res.json({ message: 'ƒêƒÉng nh·∫≠p th√†nh c√¥ng!', role: user.CHUCVU });

  } catch (err) {
    console.error('L·ªói ƒëƒÉng nh·∫≠p:', err);
    res.status(500).json({ message: 'L·ªói m√°y ch·ªß. Vui l√≤ng th·ª≠ l·∫°i sau.' });
  }
};


logout = (req, res) => {
  res.clearCookie('token');
  res.json({ message: 'ƒê√£ ƒëƒÉng xu·∫•t.' });
  console.log('User logged out, token cookie cleared.');
}

getMe = async (req, res) => {
  try {
    const username = req.user.username;
    const user = await userModel.findByUsername(username);

    if (!user) return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng' });

    // ch·ªâ tr·∫£ v·ªÅ th√¥ng tin c∆° b·∫£n, kh√¥ng g·ª≠i password
    res.json({
      user_id: user.MATAIKHOAN,
      username: user.TENDANGNHAP,
      full_name: user.HOTEN,
      role: user.CHUCVU
    });
  } catch (err) {
    console.error(err);
    res.status(500).json({ message: 'L·ªói server' });
  }
};


module.exports = {
  login,
  logout,
  getMe
};